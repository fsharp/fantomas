<Project>
    <Target Name="RestoreTools">
        <Exec Command="dotnet tool restore" />
    </Target>

    <Target
            Name="DiscoverSourceFiles"
            Outputs="FormatSources"
            Returns="FormatSources">
        <ItemGroup>
            <FormatSources
                    Include="src/**/*.fs"
                    Exclude="src/**/obj/**/*.fs;src/Fantomas.FCS/generated/netstandard2.0/*.fs" />
            <FormatSources Include="src/**/*.fsi" Exclude="src/Fantomas.FCS/generated/netstandard2.0/*.fsi" />
            <FormatSources Include="build.fsx" />
            <FormatSources Include="docs/**/*.fsx" />
        </ItemGroup>
    </Target>

    <Target
            Name="Format"
            DependsOnTargets="RestoreTools;DiscoverSourceFiles">
        <Exec Command="dotnet fantomas @(FormatSources, ' ')" />
    </Target>

    <Target
            Name="CheckFormat"
            DependsOnTargets="RestoreTools;DiscoverSourceFiles">
        <Exec Command="dotnet fantomas --check @(FormatSources, ' ')" />
    </Target>

    <Target
            Name="_GetChangedFilesInWorkingCopy"
            Outputs="ChangedFiles"
            Returns="ChangedFiles">
        <Exec
                Command="git diff --name-only"
                ConsoleToMsBuild="true"
                EchoOff="true">
            <Output
                    TaskParameter="ConsoleOutput"
                    ItemName="ChangedFiles" />
        </Exec>

    </Target>

    <Target
            Name="FormatChanged"
            DependsOnTargets="RestoreTools;_GetChangedFilesInWorkingCopy">
        <ItemGroup>
            <SourceFiles
                    Include="%(ChangedFiles.Identity)"
                    Condition="@(ChangedFiles->StartsWith('src'))" />
            <FormatItems
                    Include="@(SourceFiles)"
                    Condition="'%(SourceFiles.Extension)' == '.fs' or '%(SourceFiles.Extension)' == '.fsi'" />
        </ItemGroup>
        <Exec
                Command="dotnet fantomas @(FormatItems, ' ')"
                Condition="@(FormatItems->Count()) > 0" />
    </Target>

    <Target Name="EnsureRepoConfig">
        <Exec Command="git config core.hooksPath .githooks" />
    </Target>

    <Target Name="Benchmark">
        <MSBuild Projects="src/Fantomas.Benchmarks/Fantomas.Benchmarks.fsproj" Targets="Build" Properties="Configuration=Release">
            <Output
                TaskParameter="TargetOutputs"
                ItemName="BenchmarkAssemblies" />
        </MSBuild>
        <Exec Command="dotnet @(BenchmarkAssemblies)" IgnoreStandardErrorWarningFormat="true" />
    </Target>
    
    <Target Name="All">
        <MSBuild Projects="fantomas.sln" Targets="Clean" />
        <CallTarget Targets="CheckFormat" />
        <MSBuild Projects="fantomas.sln" Targets="Build" Properties="Configuration=Release" />
        <MSBuild Projects="fantomas.sln" Targets="VSTest" Properties="Configuration=Release" />
        <CallTarget Targets="BenchMark" />
        <MSBuild Projects="fantomas.sln" Targets="Pack" Properties="Configuration=Release;PackageOutputPath=$(MSBuildThisFileDirectory)bin"/>
    </Target>

    <Target Name="Docs" DependsOnTargets="RestoreTools">
        <Exec Command="dotnet fsi docs/.style/style.fsx" IgnoreStandardErrorWarningFormat="true" />
        <Exec Command="dotnet fsdocs build --clean --properties Configuration=Release" IgnoreStandardErrorWarningFormat="true" />
    </Target>
</Project>